# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'proj.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(299, 400)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        MainWindow.setAutoFillBackground(False)
        self.text_enter = QtWidgets.QLabel(MainWindow)
        self.text_enter.setGeometry(QtCore.QRect(0, 40, 291, 51))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(False)
        font.setWeight(50)
        self.text_enter.setFont(font)
        self.text_enter.setFocusPolicy(QtCore.Qt.NoFocus)
        self.text_enter.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.text_enter.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(170, 0, 0);")
        self.text_enter.setTextFormat(QtCore.Qt.MarkdownText)
        self.text_enter.setObjectName("text_enter")
        self.Button_7 = QtWidgets.QPushButton(MainWindow)
        self.Button_7.setGeometry(QtCore.QRect(0, 160, 51, 51))
        self.Button_7.setObjectName("Button_7")
        self.Button_8 = QtWidgets.QPushButton(MainWindow)
        self.Button_8.setGeometry(QtCore.QRect(60, 160, 51, 51))
        self.Button_8.setObjectName("Button_8")
        self.Button_9 = QtWidgets.QPushButton(MainWindow)
        self.Button_9.setGeometry(QtCore.QRect(120, 160, 51, 51))
        self.Button_9.setObjectName("Button_9")
        self.Button_division = QtWidgets.QPushButton(MainWindow)
        self.Button_division.setGeometry(QtCore.QRect(240, 280, 51, 51))
        self.Button_division.setObjectName("Button_division")
        self.Button_4 = QtWidgets.QPushButton(MainWindow)
        self.Button_4.setGeometry(QtCore.QRect(0, 220, 51, 51))
        self.Button_4.setObjectName("Button_4")
        self.Button_5 = QtWidgets.QPushButton(MainWindow)
        self.Button_5.setGeometry(QtCore.QRect(60, 220, 51, 51))
        self.Button_5.setObjectName("Button_5")
        self.Button_6 = QtWidgets.QPushButton(MainWindow)
        self.Button_6.setGeometry(QtCore.QRect(120, 220, 51, 51))
        self.Button_6.setObjectName("Button_6")
        self.Button_substraction = QtWidgets.QPushButton(MainWindow)
        self.Button_substraction.setGeometry(QtCore.QRect(180, 220, 51, 51))
        self.Button_substraction.setObjectName("Button_substraction")
        self.Button_2 = QtWidgets.QPushButton(MainWindow)
        self.Button_2.setGeometry(QtCore.QRect(60, 280, 51, 51))
        self.Button_2.setObjectName("Button_2")
        self.Button_addition = QtWidgets.QPushButton(MainWindow)
        self.Button_addition.setGeometry(QtCore.QRect(240, 220, 51, 51))
        self.Button_addition.setObjectName("Button_addition")
        self.Button_1 = QtWidgets.QPushButton(MainWindow)
        self.Button_1.setGeometry(QtCore.QRect(0, 280, 51, 51))
        self.Button_1.setObjectName("Button_1")
        self.Button_3 = QtWidgets.QPushButton(MainWindow)
        self.Button_3.setGeometry(QtCore.QRect(120, 280, 51, 51))
        self.Button_3.setObjectName("Button_3")
        self.Button_0 = QtWidgets.QPushButton(MainWindow)
        self.Button_0.setGeometry(QtCore.QRect(0, 340, 111, 51))
        self.Button_0.setObjectName("Button_0")
        self.Button_pos_neg = QtWidgets.QPushButton(MainWindow)
        self.Button_pos_neg.setGeometry(QtCore.QRect(180, 100, 111, 51))
        self.Button_pos_neg.setObjectName("Button_pos_neg")
        self.Button_total = QtWidgets.QPushButton(MainWindow)
        self.Button_total.setGeometry(QtCore.QRect(180, 340, 111, 51))
        self.Button_total.setObjectName("Button_total")
        self.Button_point = QtWidgets.QPushButton(MainWindow)
        self.Button_point.setGeometry(QtCore.QRect(120, 340, 51, 51))
        self.Button_point.setObjectName("Button_point")
        self.text_enter_2 = QtWidgets.QLabel(MainWindow)
        self.text_enter_2.setGeometry(QtCore.QRect(0, 10, 261, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.text_enter_2.setFont(font)
        self.text_enter_2.setFocusPolicy(QtCore.Qt.NoFocus)
        self.text_enter_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.text_enter_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(170, 0, 0);")
        self.text_enter_2.setText("")
        self.text_enter_2.setTextFormat(QtCore.Qt.MarkdownText)
        self.text_enter_2.setObjectName("text_enter_2")
        self.Button_sin = QtWidgets.QPushButton(MainWindow)
        self.Button_sin.setGeometry(QtCore.QRect(180, 160, 51, 51))
        self.Button_sin.setObjectName("Button_sin")
        self.Button_cos_2 = QtWidgets.QPushButton(MainWindow)
        self.Button_cos_2.setGeometry(QtCore.QRect(240, 160, 51, 51))
        self.Button_cos_2.setObjectName("Button_cos_2")
        self.Button_del_one_position = QtWidgets.QPushButton(MainWindow)
        self.Button_del_one_position.setGeometry(QtCore.QRect(0, 100, 51, 51))
        self.Button_del_one_position.setObjectName("Button_del_one_position")
        self.Button_multiplication = QtWidgets.QPushButton(MainWindow)
        self.Button_multiplication.setGeometry(QtCore.QRect(180, 280, 51, 51))
        self.Button_multiplication.setObjectName("Button_multiplication")
        self.Button_clean = QtWidgets.QPushButton(MainWindow)
        self.Button_clean.setGeometry(QtCore.QRect(60, 100, 51, 51))
        self.Button_clean.setObjectName("Button_clean_3")
        self.Button_sqr = QtWidgets.QPushButton(MainWindow)
        self.Button_sqr.setGeometry(QtCore.QRect(120, 100, 51, 51))
        self.Button_sqr.setObjectName("Button_sqr")
        self.text_operation = QtWidgets.QLabel(MainWindow)
        self.text_operation.setGeometry(QtCore.QRect(270, 10, 21, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.text_operation.setFont(font)
        self.text_operation.setFocusPolicy(QtCore.Qt.NoFocus)
        self.text_operation.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.text_operation.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(170, 0, 0);")
        self.text_operation.setText("")
        self.text_operation.setTextFormat(QtCore.Qt.AutoText)
        self.text_operation.setAlignment(QtCore.Qt.AlignCenter)
        self.text_operation.setObjectName("text_operation")

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.add_element()


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Калькулятор"))
        self.text_enter.setText(_translate("MainWindow", "0"))
        self.Button_7.setText(_translate("MainWindow", "7"))
        self.Button_8.setText(_translate("MainWindow", "8"))
        self.Button_9.setText(_translate("MainWindow", "9"))
        self.Button_division.setText(_translate("MainWindow", "/"))
        self.Button_4.setText(_translate("MainWindow", "4"))
        self.Button_5.setText(_translate("MainWindow", "5"))
        self.Button_6.setText(_translate("MainWindow", "6"))
        self.Button_substraction.setText(_translate("MainWindow", "-"))
        self.Button_2.setText(_translate("MainWindow", "2"))
        self.Button_addition.setText(_translate("MainWindow", "+"))
        self.Button_1.setText(_translate("MainWindow", "1"))
        self.Button_3.setText(_translate("MainWindow", "3"))
        self.Button_0.setText(_translate("MainWindow", "0"))
        self.Button_pos_neg.setText(_translate("MainWindow", "+/-"))
        self.Button_total.setText(_translate("MainWindow", "="))
        self.Button_point.setText(_translate("MainWindow", "."))
        self.Button_sin.setText(_translate("MainWindow", "sin"))
        self.Button_cos_2.setText(_translate("MainWindow", "cos"))
        self.Button_del_one_position.setText(_translate("MainWindow", "<-"))
        self.Button_multiplication.setText(_translate("MainWindow", "*"))
        self.Button_clean.setText(_translate("MainWindow", "C"))
        self.Button_sqr.setText(_translate("MainWindow", "sq"))


    def add_element(self):
        self.Button_clean.clicked.connect(lambda: self.write_number(self.Button_clean.text()))
        self.Button_sqr.clicked.connect(lambda: self.write_number(self.Button_sqr.text()))
        self.Button_7.clicked.connect(lambda: self.write_number(self.Button_7.text()))
        self.Button_8.clicked.connect(lambda: self.write_number(self.Button_8.text()))
        self.Button_9.clicked.connect(lambda: self.write_number(self.Button_9.text()))
        self.Button_division.clicked.connect(lambda: self.write_number(self.Button_division.text()))
        self.Button_4.clicked.connect(lambda: self.write_number(self.Button_4.text()))
        self.Button_5.clicked.connect(lambda: self.write_number(self.Button_5.text()))
        self.Button_6.clicked.connect(lambda: self.write_number(self.Button_6.text()))
        self.Button_substraction.clicked.connect(lambda: self.write_number(self.Button_substraction.text()))
        self.Button_2.clicked.connect(lambda: self.write_number(self.Button_2.text()))
        self.Button_addition.clicked.connect(lambda: self.write_number(self.Button_addition.text()))
        self.Button_1.clicked.connect(lambda: self.write_number(self.Button_1.text()))
        self.Button_3.clicked.connect(lambda: self.write_number(self.Button_3.text()))
        self.Button_0.clicked.connect(lambda: self.write_number(self.Button_0.text()))
        self.Button_pos_neg.clicked.connect(lambda: self.write_number(self.Button_pos_neg.text()))
        self.Button_total.clicked.connect(lambda: self.write_number(self.Button_total.text()))
        self.Button_point.clicked.connect(lambda: self.write_number(self.Button_point.text()))
        self.Button_sin.clicked.connect(lambda: self.write_number(self.Button_sin.text()))
        self.Button_cos_2.clicked.connect(lambda: self.write_number(self.Button_cos_2.text()))
        self.Button_del_one_position.clicked.connect(lambda: self.write_number(self.Button_del_one_position.text()))
        self.Button_multiplication.clicked.connect(lambda: self.write_number(self.Button_multiplication.text()))


    def translation_into_number(self, number):
        try:
            if type(int(number)) == int:
                return int(number)
            else:
                return float(number)
        except:
            Exception()


    def check_point_in_finish_string(self):
        if len(self.text_enter.text()) > 0:
            value_text_enter = self.text_enter.text()[-1]
            if value_text_enter == '.':
                self.text_enter_2.setText(self.text_enter.text() + '0')
                self.text_enter.setText('')
            else:
                self.text_enter_2.setText(self.text_enter.text())
                self.text_enter.setText('')


    def write_number(self, number):
        self.text_operation.text()
        self.operation = None

        if number.isdigit():
            if self.text_enter.text() == '0':
                self.text_enter.setText(number)
            else:
                self.text_enter.setText(self.text_enter.text() + number)

        elif number.isdigit() is False:
            if number == '.':
                if len(self.text_enter.text()) > 0:
                    self.text_enter.setText(self.text_enter.text() + number)
            elif number in ('+', '-', '/', '*'):
                self.check_point_in_finish_string()
                self.text_operation.setText(number)


            elif number == '=':
                if self.text_enter.text() and len(self.text_operation.text()) and self.text_enter_2.text():
                    if self.text_operation.text() == '+':
                        self.total = eval(f'{self.text_enter.text()} {self.text_operation.text()} {self.text_enter_2.text()}')
                    elif self.text_operation.text() == '-':
                        self.total = eval(f'{self.text_enter_2.text()}{self.text_operation.text()}{self.text_enter.text()}')
                    elif self.text_operation.text() == '/':
                        self.total = eval(f'{self.text_enter_2.text()}{self.text_operation.text()}{self.text_enter.text()}  ')
                    elif self.text_operation.text() == '*':
                        self.total = eval(f'{self.text_enter.text()} {self.text_operation.text()} {self.text_enter_2.text()}')
                    self.text_enter.setText(f'{self.total}')
                    self.text_enter_2.setText('')
                    self.text_operation.setText('')
                else:
                    print('Недостаточно аргументов')


            elif number == '+/-':
                try:
                    if self.text_enter.text()[0] is not '-':
                        self.text_enter.setText('-' + self.text_enter.text())
                    elif self.text_enter.text()[0] is '-':
                        self.text_enter.setText(self.text_enter.text().replace('-', ''))
                except:
                    pass


            elif number in ('sin', 'cos'):
                import math
                self.check_point_in_finish_string()
                if number == 'sin':
                    translation_num = self.translation_into_number(self.text_enter_2.text())
                    sin = math.sin(translation_num)
                    self.text_enter.setText(f'{round(sin,5)}')
                    self.text_enter_2.setText(f'')
                else:
                    translation_num = self.translation_into_number(self.text_enter_2.text())
                    cos = math.sin(translation_num)
                    self.text_enter.setText(f'{round(cos,5)}')
                    self.text_enter_2.setText(f'')


            elif number == 'C':
                self.text_enter_2.setText('')
                self.text_enter.setText('')
                self.text_operation.setText('')

            elif number == '<-':
                finish_symbol = len(self.text_enter.text()) - 1
                self.text_enter.setText(self.text_enter.text()[0:finish_symbol])

            elif number == 'sq':
                self.check_point_in_finish_string()
                value_int = self.translation_into_number(self.text_enter_2.text())
                self.text_enter.setText(f'{value_int ** 2}')
                self.text_enter_2.setText(f'')

if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
